services:

  web:
    build:
      context: .
      dockerfile: Dockerfile-web.ci
    command: gunicorn Application_Main.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static:/main/static
    expose:
      - 8000

  db:
    image: postgres
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data2
    environment:
      - POSTGRES_DB=django
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    restart: always
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

  celery:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: "celery -A Application_Main worker"
    depends_on:
      - web
      - redis
      - db
    restart: on-failure

volumes:
  static:

secrets:
  db-password:
    file: db/password.txt